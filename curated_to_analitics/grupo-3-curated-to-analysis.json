{
  "jobConfig": {
    "name": "grupo-3-curated-to-analysis",
    "description": "",
    "role": "arn:aws:iam::114652167878:role/AWSGlueAndS3RoleGrupo2",
    "command": "glueetl",
    "version": "3.0",
    "workerType": "G.1X",
    "numberOfWorkers": 10,
    "maxCapacity": 10,
    "maxRetries": 0,
    "timeout": 2880,
    "maxConcurrentRuns": 1,
    "security": "none",
    "scriptName": "grupo-3-curated-to-analysis.py",
    "scriptLocation": "s3://aws-glue-assets-114652167878-eu-west-1/scripts/",
    "language": "python-3",
    "jobParameters": [],
    "tags": [],
    "jobMode": "DEVELOPER_MODE",
    "createdOn": "2023-03-24T07:30:01.171Z",
    "developerMode": true,
    "connectionsList": [],
    "temporaryDirectory": "s3://aws-glue-assets-114652167878-eu-west-1/temporary/",
    "logging": true,
    "glueHiveMetastore": true,
    "etlAutoTuning": true,
    "metrics": true,
    "spark": true,
    "bookmark": "job-bookmark-disable",
    "sparkPath": "s3://aws-glue-assets-114652167878-eu-west-1/sparkHistoryLogs/",
    "flexExecution": false,
    "minFlexWorkers": null
  },
  "hasBeenSaved": false,
  "script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom pyspark.sql.functions import split, from_unixtime, unix_timestamp, date_format, concat_ws, lit, to_date, col, year\n\n## @params: [JOB_NAME]\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\n\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\nhoroscopo_path = \"s3://sot-practica-grupo-3/curated/horoscopo/*.parquet\"\nuser_id_profile_path = \"s3://sot-practica-grupo-3/curated/user_id_profile/*.parquet\"\n\n# Join Profile - Horoscopo\nhoroscopo = spark.read.format(\"parquet\").load(horoscopo_path)\nprofiles = spark.read.format(\"parquet\").load(user_id_profile_path)\n\nstart_split = split(horoscopo['startDate'], '-')\nhoroscopo = horoscopo.withColumn(\"start_month\",from_unixtime(unix_timestamp(start_split.getItem(1),'MMM'),'MM'))\nhoroscopo = horoscopo.withColumn(\"start_day\", start_split.getItem(0))\n\nend_split = split(horoscopo['endDate'], '-')\nhoroscopo = horoscopo.withColumn(\"end_month\",from_unixtime(unix_timestamp(end_split.getItem(1),'MMM'),'MM'))\nhoroscopo = horoscopo.withColumn(\"end_day\", end_split.getItem(0))\n\nprofiles_horoscopo = profiles.alias(\"profile\").join(horoscopo.alias(\"h\"), col(\"profile.registered\").between(\n    date_format(concat_ws(\"-\", year(col(\"profile.registered\")), col(\"start_month\"), col(\"start_day\")),\"yyyy-MM-dd\").cast(\"date\"), #start date\n    date_format(concat_ws(\"-\", year(col(\"profile.registered\")), col(\"end_month\"), col(\"end_day\")),\"yyyy-MM-dd\").cast(\"date\") #end date\n))\n\nprofiles_horoscopo_def = profiles_horoscopo.select(col(\"#id\"), col(\"gender\"), col(\"age\"), col(\"country\"), col(\"registered\"), col(\"h.sign\").alias(\"horoscopo\"))\n\n# Join Profile - Horoscopo - Continent\ncontinent_path = \"s3://sot-practica-grupo-3/curated/continentCountry/*.parquet\"\ncontinent = spark.read.format(\"parquet\").load(continent_path)\n\nprofile_horoscopo_continent = profiles_horoscopo_def.alias(\"pro_h\").join(continent.alias(\"con\"), col(\"pro_h.country\") == col(\"con.country\"), \"left\")\nresult_df = profile_horoscopo_continent.select(\"pro_h.#id\", \"pro_h.gender\", \"pro_h.age\", \"pro_h.country\", \"pro_h.registered\", \"pro_h.horoscopo\", \"con.continent\", \"con.sub_region\")\nresult_df.write.format(\"parquet\").mode(\"overwrite\").save(\"s3://sot-practica-grupo-3-analytics/data/profiles\")\n\nsongs_path = \"s3://sot-practica-grupo-3/curated/user_songs/*.parquet\"\nsongs = spark.read.format(\"parquet\").load(songs_path)\nsongs.write.format(\"parquet\").mode(\"overwrite\").save(\"s3://sot-practica-grupo-3-analytics/data/songs\")\n\nhoroscopo.write.format(\"parquet\").mode(\"overwrite\").save(\"s3://sot-practica-grupo-3-analytics/data/horoscopo\")\ncontinent.write.format(\"parquet\").mode(\"overwrite\").save(\"s3://sot-practica-grupo-3-analytics/data/continent\")\n\n\njob.commit()"
}